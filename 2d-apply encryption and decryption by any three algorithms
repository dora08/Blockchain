Encryption:
Encryption is the process of converting plain text or data into an unreadable format called ciphertext using an encryption algorithm and a key.
It ensures data confidentiality by making it difficult for unauthorized parties to understand the original message without the appropriate decryption key.

Decryption:
Decryption is the reverse process of encryption; it involves converting ciphertext back into its original plaintext form using a decryption algorithm and the correct decryption key.
Decryption allows authorized parties to recover the original message and understand its contents.

AES (Advanced Encryption Standard):
AES is a symmetric encryption algorithm widely adopted for securing sensitive data.
It operates on fixed-size blocks of data (128 bits) and uses keys of various lengths (128, 192, or 256 bits).
AES is known for its efficiency, security, and resistance to various cryptographic attacks.

DES (Data Encryption Standard):
DES is an older symmetric encryption algorithm developed in the 1970s by IBM.
It operates on 64-bit blocks of data and uses a 56-bit key.
DES has become less secure over time due to advances in technology, and it's generally replaced by AES in modern applications.

RSA (Rivest-Shamir-Adleman):
RSA is an asymmetric encryption algorithm used for secure communication and digital signatures.
It involves generating a key pair consisting of a public key and a private key.
The public key is used for encryption, while the private key is used for decryption.
RSA's security is based on the difficulty of factoring large prime numbers, making it suitable for secure communication over insecure channels and digital signatures.






import pyaes
from pyDes import *
import rsa
from cryptography.fernet import Fernet

def AES():
    aes = pyaes.AESModeOfOperationCTR(b'DESCRYPTDESCRYPT')
    plaintext = input("Enter plain text for AES: ")
    ciphertext = aes.encrypt(plaintext)
    print("Encrypted:", ciphertext)
    aes = pyaes.AESModeOfOperationCTR(b'DESCRYPTDESCRYPT')
    decrypted_text = aes.decrypt(ciphertext)
    print("Decrypted:", decrypted_text.decode('utf-8'))

def DES():
    data = input("Enter plain text for DES: ")
    k = des("DESCRYPT", CBC, "\0\0\0\0\0\0\0\0", pad=None, padmode=PAD_PKCS5) 
    encrypted_data = k.encrypt(data)
    print("Encrypted:", encrypted_data)
    decrypted_data = k.decrypt(encrypted_data)
    print("Decrypted:", decrypted_data)



def RSA():
    (pubkey, privkey) = rsa.newkeys(512)
    message = input("Enter plain text for RSA: ").encode('utf8')
    crypto = rsa.encrypt(message, pubkey)
    print("Encrypted:", crypto)
    decrypted_message = rsa.decrypt(crypto, privkey)
    print("Decrypted:", decrypted_message.decode('utf8'))

def main():
    cryptography_choice = input("Enter the type of cryptography (AES, DES, RSA): ").upper()

    if cryptography_choice == 'AES':
        AES()
    elif cryptography_choice == 'DES':
        DES()
    
    elif cryptography_choice == 'RSA':
        RSA()
    else:
        print("Invalid choice. Please enter AES, DES, or RSA.")

if __name__ == "__main__":
    main()
